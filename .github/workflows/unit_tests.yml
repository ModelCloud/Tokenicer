name: Unit tests

defaults:
  run:
    shell: bash -le {0}

on:
  repository_dispatch:
  workflow_dispatch:

env:
  CUDA_DEVICE_ORDER: PCI_BUS_ID

jobs:

  list-test-files:
    runs-on: ubuntu-24.04
    if: github.event.inputs.m4-only != 'true'
    outputs:
      test-files: ${{ steps.files.outputs.test-files }}
    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4

      - name: List files
        id: files
        run: |
          dir="tests"
          json_array="["

          for file in "$dir"/*; do
          [ -f "$file" ] || continue
          filename=$(basename "$file")
          json_array+="\"$filename\","
          done

          json_array="${json_array%,}]"

          echo "$json_array"

          echo "test-files=$json_array" >> "$GITHUB_OUTPUT"

  test:
    runs-on: [ self-hosted ]
    needs:
      - list-test-files
    container:
      image: 10.0.13.31:5000/nvidia/cuda:128-ubuntu22.04_0822
      volumes:
        - /home/ci/models:/monster/data/model
        - /home/ci/models/huggingface:/github/home/.cache/huggingface
        - /home/ci/models/pyenv:/opt/pyenv
    strategy:
      fail-fast: false
      matrix:
        test_script: ${{ fromJSON(needs.list-test-files.outputs.test-files) }}
    steps:
      - uses: actions/checkout@v4

      - name: Print Env
        run: |
          env_name="cu128_torch2.8.0_py3.12_tokenicer_${{ matrix.test_script }}"

          echo "env name: $env_name"

          if [ -d "$(pyenv root)/versions/$env_name" ]; then
            echo "env exists, skip"
            pyenv activate $env_name
          else
            echo "creating venv..."
            pyenv virtualenv 3.12 "$env_name"
            pyenv activate $env_name
            bash -c "$(curl -L http://10.0.13.31/scripts/env/init_compiler_no_env.sh)" @ 128 2.8.0 3.12
          fi

      - name: install requirements
        run: |
          pip install uv
          uv pip install parameterized pytest pytest-xdist transformers -U

      - name: install
        run: pip install .

      - name: test
        run: pytest -n 8 -v tests/${{ matrix.test_script }}
